#!@PERL@ -T
# -*- perl -*-
# @configure_input@
#
# $Id: navigate.pl.plin,v 2.10 2004/05/28 18:43:02 o Exp $
#
# philologic 2.8 -- TEI XML/SGML Full-text database engine
# Copyright (C) 2004 University of Chicago
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the Affero General Public License as published by
# Affero, Inc.; either version 1 of the License, or (at your option)
# any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Affero General Public License for more details.
# 
# You should have received a copy of the Affero General Public License
# along with this program; if not, write to Affero, Inc.,
# 510 Third Street, Suite 225, San Francisco, CA 94107 USA.

$PHILOSITECFG = "@sysconfdir@/philologic";

$QS = $ENV{'QUERY_STRING'};
($dbname, $doc) = split ('\.', $QS);

do "$PHILOSITECFG/dbnames";
$SYSTEM_DIR=$dbnames{"$dbname"};

do "$PHILOSITECFG/philologic.cfg";

unshift (@INC, $SYSTEM_DIR . "lib");
require "philosubs.pl";

$DEPTH = 3; 

print &mkTitle;

if (defined(&NavigBiblio)) {
      print &NavigBiblio($doc);
      }
else {
	print "<center><h2>" . $philomessage[239] . "</h2>\n";
	print "<h3>" . &getbiblioLine ($doc) . "</h3></center>\n";
}

print sprintf($philomessage[240], $PHILOCGI, $QS) . "<P>\n";

if ( ! -e $SYSTEM_DIR . "/navigation/" . $doc ) {
    print STDERR "no navigation info!\n";
    exit (1); 
}

open IN, $SYSTEM_DIR . "/navigation/" . $doc;

@T = <IN>; 
$c = 0; 


while ( $c <= $#T && ( &getlevel($T[$c]) != 1 || !&c_notempty($T[$c]) ))
{
    $c++; 
}


if ( $c )
{
    &printout ( $T[0] );
}

&childs_recursive ( 1 ); 

# MVO added print KWIC footer -- March 5 99
print &kwicfooter ;


sub childs_recursive {
    local ( $level ) = $_[0]; 
    local ( @childs, $c_found = 0 ); 
    local ( $c_local ); 

    if ( $level == $DEPTH )
    {
	while ( &getlevel ($T[$c]) == $level ) {
	    if ( $c_found++ || &c_notempty ($T[$c]) ) {
		&printout ( $T[$c] );
	    }
	    $c++;
	}
	
    }
    else {

	$c_local = $c;

	while ( &getlevel ($T[$c]) == $level ) {
	    if ( $c_found++ || &c_notempty ($T[$c]) ) {
		&printout ($T[$c]); 
	    }

	    $c++; 
	
	    &childs_recursive ( $level + 1 ); 
	}
    }

}

sub printout {
    local ( $line, $level, $tag, $title, $format, $i ); 

    foreach $line (@_) {
	chop $line; 
	$level = &getlevel ( $line ); 
	($tag, $title) = split (' ', $line, 2); 
	$title = "[header]" unless $title; 
	if (defined(&NavDivTitle)) {
		$title = &NavDivTitle($title);
		}
	else {
		$title =~ s/\&dot;/\./g;
	}

        if ($title) {
	    print "<p>" if $level == 1; 
	    print "<span class=navlevel$level>";
	    if ( $NO_Navigation_Links ) {
	       print "<u>" . $title . "</u>";
	       }
	    else {
	       print "<a href=\"$PHILOCGI/getobject.pl?c." 
		. $tag 
		    . "." 
			 . $dbname 
			    . "\">"
				;#if $level < 3; 
	       print $title; 
	       print "</a>";# if $level < 3; 
	    }
	    print "</span>\n";
	}
    }
}


    
sub getlevel {
    local ( $node ) = $_[0]; 
    local ( @index ); 

    @index = split (':', (split(' ', $node))[0]); 

    return $#index; 
}
    
sub c_notempty {
    local ( $node ) = $_[0]; 
    local ( @fields ); 

    chop $node; 

    @fields = split (' ', $node); 

    return $#fields; 
}