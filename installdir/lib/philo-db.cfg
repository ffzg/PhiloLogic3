# $Id: philo-db.cfg,v 2.13 2004/11/16 17:00:04 o Exp $
# ====================================================================
# The file is included in all PhiloLogic functions.  It provides
# many configuration points for search and result displays.  There
# are 3 main components.
#       Loadtime configuration variables
#       PhiloLogic Installation Specifications
#       Database Specific Configuration Settings
#       Subroutines called by core PhiloLogic functions
# Last Modified: MVO, March 14, 2005
# ======================================================================
# ================== PhiloLogic WWW Debug Option =======================
# ======================================================================
# Set the PhiloLogic debug function for search3t.  I could add this
# to a search form, but it is better if a database admin does this. 
# Normally set to 0, 1 to turn on.  Here for your testing convenience.
$PhiloDeBugDump = 0;

# ======================================================================
# ================== Loadtime Configuration Variables ==================
# ======================================================================
#
# ======================================================================
# =============== PhiloLogic Installation Specifications =============
# ======================================================================
# These are pending ... I will be changing main system args to these.
# Will probably need a few more.  
$SITECONFIG = "/etc/philologic/philologic.cfg";
do "$SITECONFIG";

$ERRORCONTACT = "The ARTFL Project";

# ======================================================================
# =============== Database Specific Configuration Settings =============
# ======================================================================

# ---------------------------- TextType --------------------------------
# This should be off for non ARTFL TEI encoded documents.  philosubs.pl has
# simple output handling for "plaintext", "docbook", "ate" and "artfltei".  
# If you have loaded a database with --texttype= set to one of these 
# values, you should set  $TextType to the same.  Lower case values only.  
# Note that "artfltei" is NOT a philoload option, but is used here to
# invoke the ARTFL specific TEI note/reference handler.  This is to
# simplify ARTFL notehandling. 
$TextType = "artfltei";
# -------------------------------------------------------------------

#--------------------------- PopNotes ---------------------------------
# This invokes the super cool pop-up note display scheme that Russ
# cooked up.  It works only for ARTFL TEI and ATE documents where notes
# are encoded in distinct divs and particular objects.  Default is 
# OFF (0).  If you turn this feature on, make sure that your 
# Results_Header.html has fully expressed PATHS for 
# <!-- These are for the pop-in notes -->
# <script src="/philologic/prototype.lite.js"></script>
# <script src="/philologic/moo.ajax.js"></script>
# <script src="/philologic/notes.js"></script>
# and that these are uncommented.
$DisplayPopNotes = 0;
# -------------------------------------------------------------------

# ------------------------- Access Control -----------------------------
# Require PhiloLogic Access Control 1 = ON  0 = OFF
# Looks for IMAGEDIR/lib/security.ph from search2t.  
$PhiloLogicAccesControl = 0;
# And if you set this, you'll want to customized your REJECT_MESSAGE.
$REJECT_MESSAGE = "";
# security.ph also checks to see if there is a spill file of
# additional ip numbers.  This is a way to allow for "login" access.
$TEMPIPS = "";
# Example: $TEMPIPS = "/tmp/artfl.ips";
# Contact ARTFL for more details and code to handle "logins".  

# Set access control for objects (getobject.pl, contextualize.pl) This is
# for the truly paranoid, so folks can't send objects around.  
$PhiloLogicObjectAccessControl = 0;

# ------------------------- Kwic Line Formatting -----------------------
# KWIC Report size and location of keyword.
$KWIC_REPORT_WIDTH = 100;      # Integer divisible by 2, default 80.
$KWIC_REPORT_SHIFT = 6;       # Characters to shift keyword left from center
$KWIC_REPORT_MAXHEAD = 20;    # Number of Characters in KWIC head

# ------------------------- Concordance Formatting -------------------
# Set the size of the concordance report "chunks".  Default is 300
# characters including all tagging.  Increasing the size is helpful
# in cases where you have large amounts of encoding.  
$CONC_CONTEXT = 300;

# ------------------------- Kwic ReSort Option ------------------------
# Enable Kwic resort function.  This is for sorted Kwic reports to
# generate and save a file of kwics and various sort keys.
$KWIC_RESORT_ON = 1;

# ------------------------ Hit Navigation Bar --------------------------
# Set size of hitblocks for showrest_: I would leave these divisible
# by 2.
$HITBLOCKSIZE = 100;
# Set number of blocks to be displayed in the hitnavigation line
$NAVLINEBLOCKLENGTH = 20;

# ------------------------- Query History Function ---------------------
# This is to store search histories by IP number.  1 to turn it
# on and create the directory which is writeable by WWW.  
# Check to see if cgi-bin/philohistory.pl has the same PHILOHISTDIR
$ALLOWHISTORY = 0;
$PHILOHISTDIR = "$PHILOTMP/philohistory/";

# -------------------------- Bibliography Printing ---------------------
# Enable printing of bibliography searched, if you have defined a
# corpus, and limit number of entries printed, for word searches
# which do not find anything.  0 means no bibliography.  Int limits
# bibliography output.  Put a really big number there to get them all.
$BIB_EXIT_PRINT_LIMIT = 50;

# Set Searches in Bibliographies.  This is for bibliography searches only.
# Set to 0 for no searching in bibliography reports.
# Set to 1 to put a search box at the top of a bibliography report
# Set to 2 to allow checkbox searches on bibliography report.
# Suggested by # Julia Flanders.  Enables SearchInBibliography
$searchfrombibliography = 2;

$OMITKWICBIBLIOGRAPHY = 0;
$OMITCONCBIBLIOGRAPHY = 0;
$OMITKWICSORTBIBLIOGRAPHY = 0;

# ------------------------- SQL metadata enabling ---------------------
# Set the SQL flag if we are using SQL so we can process the
# user input appropriately.
$SQLenabled = 0;
# mySQL interface variables.  CONNECTSTRING, USER, and PASSWD (from
# philologic.cfg are passed to gimme.sql in order to open a perl 
# DBI connection to the mySQL server.
$HOST = "localhost";
$DATABASE = "philologic";
$USER = "philologic";
# $PASSWD = "";  # This should be set in /etc/philologic/philologic.cfg
$TABLE = "...DBNAME...";
$SOCKETARG = "mysql_socket=$SQLSOCKET";
# Got all of these, so let's construct the connect string.
$CONNECTSTRING = "DBI:mysql:" . $DATABASE . ":" . $HOST . ";" . $SOCKETARG; 

# ------------------------ SQL optimization ----------------------------
# For SQL enabled gimme (gimme.sql) and subdocgimme (subdocgimme.sql)
# turn on query optimization.  If this is on ($OPTIMIZESQL = 1), both programs
# will replace the normal regexp statement with like %STRING% statements.
# Regexp is slow in mySQL, so if you don't have regexp patterns, why run
# it?  $SQLOPTSTRING sets the pattern for look for.  This function
# will support mixed regexp and like functions.
$OPTIMIZESQL = 0;
# $SQLOPTSTRING = "[ \'a-z0-9A-Z\177-\377]*";
# This is really only useful for large tables (30K records).  Very
# significant performance increases can be expected on large tables.

# ----------------------- SQL token word search operator ---------------
# Set to 1 to enable use of @ to anchor word searches in SQL in gimme and
# subdocgimme.  This rewrites the SQL query if involved:
# $query1 =~ s/\@([a-zA-Z0-9\[])/(\[^a-zA-Z0-9\]|^)$1/g;
# $query1 =~ s/([a-zA-Z0-9\]])\@/$1\([^a-zA-Z0-9\]|\$)/g;
# You may want to modify this in gimme and subdocgimme to handle different
# characters.  Use with some caution as it has not been completely tested.
# @word forces a search anchored at the beginning of the word
# word@ forces a search anchored at the end of the word
# @word@ forces the match to be anchored at the beginning and end of the word
$SQLPOORMANSTOKENIZER = 1;

# ----------------------- Dictionary Linking ---------------------------
# Enable dictionary look-up function.  Set to 0 to turn it off.
# See quickdickjs for further details.  
# Options: 1 = ARTFL one look dictionary function with morphological
#              package.  Obviously for French. 
#          2 = Oxford English Dictionary.
#          3 = ARTFL Websters Dictionary
#          4 = onelook.com
$LINKDICT = 0;

# ------------------------ Word Handling Options -----------------------
# Set to 1 to break words on apostrophe for collocation report.  
# Probably 0 for English, 1 for French.  Your mileage may vary.
# Should come from loader configuration.
$breakapost = 1;  
# Display Abbreviation Expansion   <abbr expan="em">&emacr;</abbr>
# This turns on ExpandAbbrev for reports.
$displayabbrexpan = 1;

# --------------- Metadata Configuration Functions -------------------
# This is the list of bibliographic fields that we will pass to the
# metadata search engine, either standard gimme or gimme.sql.  The
# last field must be the philodocid if you use gimme.sql  Your search
# forms must use these values as shown.

@Biblio_Fields = (
        "title", 
        "author", 
        "date", 
        "genre",
        "publisher",
        "pubplace",
        "extent",
        "editor",
        "pubdate",
        "createdate",
        "authordates",
        "keywords",
	"language",
	"collection",
	"gender",
	"sourcenote",
	"period",
        "shrtcite",
        "filename",
        "filesize",
        "philodocid"       # required integer as the last field name.  
	); 


# Character Mappings: This is the list of patterns that match upper
# case characters for searching.  We may also set this here for 
# "crapser" (word expansion).  Currently found in the crapser script.
%ACCENTS = (
   'A',    "(a|\xc3\xa0|\xc3\xa1|\xc3\xa2|\xc3\xa3|\xc3\xa4|\xc3\x82)",
   'C',    "(c|\xc3\xa7|\xc3\x87)",
   'E',    "(e|\xc3\xa8|\xc3\xa9|\xc3\xaa|\xc3\xab|\xc3\x89|\xc3\x88|\xc3\x8A)",
   'I',    "(i|\xc3\xac|\xc3\xad|\xc3\xae|\xc3\xaf)",
   'N',    "(n|\xc3\xb1)",
   'O',    "(o|\xc3\xb2|\xc3\xb3|\xc3\xb4|\xc3\xb4|\xc3\xb6|\xc3\x94)",
   'U',    "(u|\xc3\xb9|\xc3\xba|\xc3\xbb|\xc3\xbc)",  
   'Y',    "(y|\xc3\xbf|xc3\xbd)"  );

# Bibliography search operators: Each field should have a search type,
# being one of 'regexp', 'numeric' or 'exact'.  String fields should
# be set 'regexp'.  'numeric' is reserved for integer fields, typically
# date (a year).  Integer here is a single number, no ranges.
$BIBOPS{"title"}="regexp";
$BIBOPS{"author"}="regexp";
$BIBOPS{"date"}="numeric";
$BIBOPS{"genre"}="regexp";
$BIBOPS{"publisher"}="regexp";
$BIBOPS{"pubplace"}="regexp";
$BIBOPS{"extent"}="regexp";
$BIBOPS{"editor"}="regexp";
$BIBOPS{"pubdate"}="regexp";
$BIBOPS{"createdate"}="regexp";
$BIBOPS{"authordates"}="regexp";
$BIBOPS{"keywords"}="regexp";
$BIBOPS{"language"}="regexp";
$BIBOPS{"collection"}="regexp";
$BIBOPS{"gender"}="regexp";
$BIBOPS{"sourcenote"}="regexp";
$BIBOPS{"period"}="regexp";
$BIBOPS{"shrtcite"}="regexp";
$BIBOPS{"filename"}="regexp";
$BIBOPS{"filesize"}="numeric";
$BIBOPS{"philodocid"}="exact";

# --------------------- DIV and SUBDIV Table Fields -----------------------
# For subdocgimme which reads divindex.raw or subdivindex.raw.  Your
# search forms must use these values as show.  Both tables are generated
# by textload.   Values are passed to subdocgimme.
@DIVINDEX_FIELDS = ("dgphilodivid", 
                    "dgdivhead", 
                    "dgdivtype",
                    "dgdivlang",
                    "dgdivn",
                    "dgdivid",
                    "dgdivocauthor",
                    "dgdivocdateline",
                    "dgdivocplacename",
                    "dgdivocsalutation", 
                    "dgdivocclassification",
                    "dgdivocpartofspeech", 
                    "dgdivxpath",
                    "dgphilodocid");

@SUBDIVINDEX_FIELDS = ("dgphilosubdivid",
                       "dgsubdivtag",
                       "dgsubdivtype",
                       "dgsubdivn",
                       "dgsubdivid",
                       "dgsubdivwho",
                       "dgsubdivlang",
                       "dgsubdivxpath",
                       "dgphilodocid");

# Subdocument SQL functions.  
$subdocSQLenabled = 0;                 # This default should be changed.
#
$SQLDIVTABLENAME = $TABLE . "dividx";
# Define DIV LEVEL for searching
$BIBOPS{"dgphilodivid"}="exact";
$BIBOPS{"dgdivhead"}="regexp";
$BIBOPS{"dgdivtype"}="regexp";
$BIBOPS{"dgdivlang"}="regexp";
$BIBOPS{"dgdivn"}="regexp";
$BIBOPS{"dgdivid"}="regexp";
$BIBOPS{"dgdivocauthor"}="regexp";
$BIBOPS{"dgdivocdateline"}="regexp";
$BIBOPS{"dgdivocplacename"}="regexp";
$BIBOPS{"dgdivocsalutation"}="regexp";
$BIBOPS{"dgdivocclassification"}="regexp";
$BIBOPS{"dgdivocpartofspeech"}="regexp";
$BIBOPS{"dgdivxpath"}="regexp";

$SQLSUBDIVTABLENAME = $TABLE . "subdividx";
# Define SUBDIVLEVEL for searching.
$BIBOPS{"dgphilosubdivid"}="exact";
$BIBOPS{"dgsubdivtag"}="regexp";
$BIBOPS{"dgsubdivtype"}="regexp";
$BIBOPS{"dgsubdivn"}="regexp";
$BIBOPS{"dgsubdivid"}="regexp";
$BIBOPS{"dgsubdivwho"}="regexp";
$BIBOPS{"dgsubdivlang"}="regexp";
$BIBOPS{"dgsubdivxpath"}="regexp";

# and get both have philodocid as exact.  These should probably
# be named differently.
$BIBOPS{"dgphilodocid"}="exact";

# and that should be everything we need here.....

# --------------------- END metadata configuration ------------------------

# -------------------------- Hit Highliteing ------------------------------
# Set the tags to indicate hits in reports.  Object Reports are all
# text objects, pages, parts, paragraphs, etc.  It can be font shifts
# or inline gifs.  Don't change the KWIC option.
$hithighon_conc = "<FONT COLOR=\"#CC3300\"><b>";   # Concordance Report
$hithighoff_conc = "</b></FONT>";       
# $hithighon_conc = "<img src=\"/mark/hitleft.gif\">";   # Concordance Report
# $hithighoff_conc = "<img src=\"/mark/hitright.gif\">";       
$hithighon_kwic = "<b>";                           # KWIC Report
$hithighoff_kwic = "</b>";
$hithighon_obj = "<FONT COLOR=\"#CC3300\"><b>";    # Object Report 
$hithighoff_obj = "</b></FONT>";
# $hithighon_obj = "<img src=\"/mark/hitleft.gif\">";    # Object Report 
# $hithighoff_obj = "<img src=\"/mark/hitright.gif\">";

# -------------------------------------------------------------------
# Links Restriction:  To comply with legal requirements for certain
#          databases, we implemented a restrictor on the link and chains.
#          We don't know if we will ever have to add the links restriction
#          mechanism to any other database, but just in case: to activate 
#          the mechanism, the following variables would be uncommented:
# -------------------------------------------------------------------
# $NO_Navigation_Links = 1; 
# $ChainLinksRestricted = 1; 
# $ChainLinksLimit = 3; 
# $AllowedObjectsDepth = 4;
#          $ChainLinksLimit is how many objects we show in both directions.
#          $AllowedObjectsDepth specifies what level of the objects 
#            hierarchy we allow the users to retreive.  In this example,
#            we only give them paragraph objects, so the depth = 4 
#            (div1, div2, div3, paragraph).
# End Link Restrictions
#

# -------------------------------------------------------------------
# Dictionary display mode:  If you are running a dictionary, the title
#	formats on the Kwic and Conc reports may be imrpoved by setting
#	the below to 1.
# -------------------------------------------------------------------
$UseDicoDisplays = 0; 

# -------------------------------------------------------------------
# Language:  Specify the messages file that you would like to use.
#	This file contains the $philomessage array that is used to 
#	localize Philo. File should be in lib/.
# -------------------------------------------------------------------
$PHILOMESSAGEFILE = "english.messages.pl"; 

# -------------------------------------------------------------------
# Tag Cloud: Display Tag Cloud in additional to standard table in
# collocation report.  Normally set to 1.
# -------------------------------------------------------------------
$SHOWTAGCLOUD = 1;

# -------------------------------------------------------------------
# List of KWIK resort labels.  This is for proper display of resort 
# fields.  The function simply sends a number to select sort fields.
# The display was broken, so I added a new display message and this
# display for the function (GetKwicResortLabels).

$ListofResortSortOptions[0] = "";
$ListofResortSortOptions[1] = "Keyword";
$ListofResortSortOptions[2] = "Words to the Right";
$ListofResortSortOptions[3] = "Words to the Left";
$ListofResortSortOptions[4] = "Field";
$ListofResortSortOptions[5] = "Work Title";
$ListofResortSortOptions[6] = "Work Author";
$ListofResortSortOptions[7] = "Work Year";
$ListofResortSortOptions[8] = "Field";
$ListofResortSortOptions[9] = "Field";
$ListofResortSortOptions[10] = "Publication Place";

# -----------------------------------------------------------------
# Set Object Labels:  This is for printing next/previous something
# and contextualization labels.  The default is very generic.
# @OBJECTLABELS = ('page', 'article', 'subarticle', 'section', 'paragraph');
# @OBJECTLABELS = ('page', 'chapter', 'section', 'part', 'paragraph');
@OBJECTLABELS = ('Page', 'Section', 'SubSect', 'Sub2Sect', 'paragraph');

1;
